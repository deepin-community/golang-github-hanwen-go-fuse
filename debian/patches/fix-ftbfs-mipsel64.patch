From: Reinhard Tartler <siretart@tauware.de>
Description: allow this library to be used on mips.
Bug-Upstream: https://github.com/hanwen/go-fuse/issues/514
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1069310

Index: golang-github-hanwen-go-fuse/fuse/print_linux.go
===================================================================
--- golang-github-hanwen-go-fuse.orig/fuse/print_linux.go
+++ golang-github-hanwen-go-fuse/fuse/print_linux.go
@@ -6,12 +6,20 @@ package fuse
 
 import (
 	"fmt"
+	"runtime"
 	"syscall"
 )
 
 func init() {
 	openFlagNames.set(syscall.O_DIRECT, "DIRECT")
 	openFlagNames.set(syscall_O_NOATIME, "NOATIME")
+
+	// restrict this hack to mips64le for now, cf. https://bugs.debian.org/1069310
+	if runtime.GOARCH != "mips64le" {
+		// syscall.O_LARGEFILE is 0x0 on x86_64, but the
+		// kernel supplies 0x8000 anyway.
+		openFlagNames.set(0x8000, "LARGEFILE")
+	}
 }
 
 func (a *Attr) string() string {
Index: golang-github-hanwen-go-fuse/fuse/print.go
===================================================================
--- golang-github-hanwen-go-fuse.orig/fuse/print.go
+++ golang-github-hanwen-go-fuse/fuse/print.go
@@ -72,9 +72,6 @@ var (
 		int64(syscall.O_NONBLOCK): "NONBLOCK",
 		int64(os.O_SYNC):          "SYNC",
 		int64(os.O_TRUNC):         "TRUNC",
-		// syscall.O_LARGEFILE is 0x0 on x86_64, but the
-		// kernel supplies 0x8000 anyway.
-		0x8000:                     "LARGEFILE",
 		int64(syscall.O_CLOEXEC):   "CLOEXEC",
 		int64(syscall.O_DIRECTORY): "DIRECTORY",
 	})
